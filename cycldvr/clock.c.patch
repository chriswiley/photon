*** clock.c.dist	Mon May 25 03:21:48 2015
--- clock.c	Mon May 25 03:45:58 2015
***************
*** 148,157 ****
--- 148,165 ----
  #endif
  static	void	set_timer_freq(u_int freq, int intr_freq);
  
+ #ifdef TIMER_HACK
+ extern (*cyclintrptr) __P((void));
+ #endif
+ 
  static void
  clkintr(struct clockframe frame)
  {
  	timer_func(&frame);
+ #ifdef TIMER_HACK
+         if (cyclintrptr)
+                 cyclintrptr();
+ #endif
  	switch (timer0_state) {
  
  	case RELEASED:
***************
*** 219,227 ****
  acquire_timer0(int rate, void (*function) __P((struct clockframe *frame)))
  {
  	static int old_rate;
! 
  	if (rate <= 0 || rate > TIMER0_MAX_FREQ)
  		return (-1);
  	switch (timer0_state) {
  
  	case RELEASED:
--- 227,239 ----
  acquire_timer0(int rate, void (*function) __P((struct clockframe *frame)))
  {
  	static int old_rate;
! #ifndef TIMER_HACK
  	if (rate <= 0 || rate > TIMER0_MAX_FREQ)
  		return (-1);
+ #else
+         if (rate <= 0 || TIMER_DIV(rate) > 0x4c38)
+                 return (-1);
+ #endif
  	switch (timer0_state) {
  
  	case RELEASED:
***************
*** 617,623 ****
--- 629,643 ----
  	ef = read_eflags();
  	disable_intr();
  	timer_freq = freq;
+ #ifdef TIMER_HACK
+         if ( intr_freq != 61) {
+ #endif
  	timer0_max_count = hardclock_max_count = TIMER_DIV(intr_freq);
+ #ifdef TIMER_HACK
+ } else {
+         timer0_max_count = hardclock_max_count = 0x4c38;
+ }
+ #endif
  	timer0_overflow_threshold = timer0_max_count - TIMER0_LATCH_COUNT;
  	outb(TIMER_MODE, TIMER_SEL0 | TIMER_RATEGEN | TIMER_16BIT);
  	outb(TIMER_CNTR0, timer0_max_count & 0xff);

