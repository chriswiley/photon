namespace eval Photon_ps {
  
variable PHASER_GAME_CODE $::Photon::GSYNC
variable PHASER_CLINK_CODE 0xC5
variable PHASER_GAME_CODE_COUNT 3
variable phaser_installed 0
variable phaser_enabled 0
variable phaser_send_clink 0
variable free_clinks 0
variable fd 0

proc connect {} {
  variable fd
  if { $fd != "-1" } {
    catch {close $fd}
  }
  if {[catch {open $::Conf::phasertty "w"} fd]} {
    ::warninglog "Cound not open phaser station device $::Conf::phasertty $fd"
    set fd -1
    return $fd --code ok
  }
  ::warninglog "Phaser stations connected on $::Conf::phasertty"
  fconfigure $fd -buffering none
  fconfigure $fd -blocking 0
  fconfigure $fd -encoding binary
  fconfigure $fd -eofchar {}
  fconfigure $fd -translation binary
  fconfigure $fd -mode 1200,n,8,1
  return $fd  
}

proc init {} {
  variable phaser_installed
  variable fd
  variable free_clinks
  
  if {[info exists ::Conf::phasertty]} {
    if { [connect] == -1 } {
      return --code ok
    }
    set phaser_installed 1
    
    if {[info exists ::Conf::phaser_free_clinks]} {
      set free_links $::Conf::phaser_free_clinks
    }
    
    after 1000 [namespace code {phasersync}]
  
    set m [menu .menubar.phaser -tearoff 0]
    .menubar add cascade -label "Phaser Stations" -menu ${m}
    ${m} add command -label "Send Clink Code" \
        -command [ namespace code { send_clink } ]
    ${m} add command -label "Send Game Start" \
        -command [ namespace code { game_on } ]
    ${m} add command -label "Stop Sending Game Start" \
        -command [ namespace code { game_off } ]
    ${m} add check -label "Free Clink Mode" -variable ::Photon_ps::free_clinks
  }
}

proc phaser_putc { c } {
  variable fd

  # Attempt to reopen the serial port if it was lost.
  if { $fd == "-1" } {
    connect
    if { $fd == "-1" } {
      return --code ok
    }
  }

  set code [ scan $c "%c" ]
  
  if {[catch {puts -nonewline $fd $code} result]} {
    ::warninglog "phaser:: could not write to $fd $result"
    close $fd
    set fd -1
  }
}

# Called every second.
proc phasersync { } {
  variable phaser_send_clink
  variable PHASER_CLINK_CODE
  variable phaser_enabled
  variable PHASER_GAME_CODE
  
  if { $phaser_send_clink > 0 } {
    ::debuglog "phaser: send clink"
    phaser_putc $PHASER_CLINK_CODE
    incr phaser_send_clink -1
  } elseif { $phaser_enabled > 0 } {
    ::debuglog "phaser:: send game code"
    phaser_putc $PHASER_CLINK_CODE
    incr phaser_enabled -1
  }
  after 1000 [ namespace code { phasersync } ]
}

proc send_clink { } {
  variable phaser_send_clink
  set phaser_send_clink 1
}

proc game_on { } {
  variable phaser_enabled
  variable PHASER_GAME_CODE_COUNT
  variable phaser_send_clink
  variable free_clinks
  if {$free_clinks} {
    set phaser_send_clink 1
  }
  set phaser_enabled $PHASER_GAME_CODE_COUNT
}

proc game_off { } {
  variable phaser_enabled
  set phaser_enabled 0
}

}
